Rs = with(module, (Vocn/Ncs - Vmn/Ncs + m * Vtn * log(1 -
Imn/Iscn))/(Imn/Ncp))
rs = with(module, Rs/((Vocn/Ncs)/(Iscn/Ncp)))
Vt = 0.025 * (Tc + 273)/300
Voc_c = with(module, Vocn/Ncs - CoefVT * (Tc - 25))
Isc_c = with(module, Iscn/Ncp * Gef/Gstc)
koc = Voc_c/(m * Vt)
Dm0 = (koc - 1)/(koc - log(koc))
Dm = Dm0 + 2 * rs * Dm0^2
Impp_c = Isc_c * (1 - Dm/koc)
Vmpp_c = Voc_c * (1 - log(koc/Dm)/koc - rs * (1 - Dm/koc))
Voc = with(module, Voc_c * Ncs * generator$Nms)
Isc = with(module, Isc_c * Ncp * generator$Nmp)
Impp = with(module, Impp_c * Ncp * generator$Nmp)
Vmpp = with(module, Vmpp_c * Ncs * generator$Nms)
m = 1.3
Rs = with(module, (Vocn/Ncs - Vmn/Ncs + m * Vtn * log(1 -
Imn/Iscn))/(Imn/Ncp))
rs = with(module, Rs/((Vocn/Ncs)/(Iscn/Ncp)))
Vt = 0.025 * (Tc + 273)/300
Voc_c = with(module, Vocn/Ncs - CoefVT * (Tc - 25))
Isc_c = with(module, Iscn/Ncp * Gef/Gstc)
koc = Voc_c/(m * Vt)
Dm0 = (koc - 1)/(koc - log(koc))
Dm = Dm0 + 2 * rs * Dm0^2
Impp_c = Isc_c * (1 - Dm/koc)
Vmpp_c = Voc_c * (1 - log(koc/Dm)/koc - rs * (1 - Dm/koc))
Voc = with(module, Voc_c * Ncs * generator$Nms)
Isc = with(module, Isc_c * Ncp * generator$Nmp)
Impp = with(module, Impp_c * Ncp * generator$Nmp)
Vmpp = with(module, Vmpp_c * Ncs * generator$Nms)
Tc = 25
Gstc = 1000
Ct = (module$TONC - 20)/800
Vtn = 0.025 * (273 + 25)/300
Rs = with(module, (Vocn/Ncs - Vmn/Ncs + m * Vtn * log(1 -
Imn/Iscn))/(Imn/Ncp))
rs = with(module, Rs/((Vocn/Ncs)/(Iscn/Ncp)))
Vt = 0.025 * (Tc + 273)/300
Voc_c = with(module, Vocn/Ncs - CoefVT * (Tc - 25))
Isc_c = with(module, Iscn/Ncp * Gef/Gstc)
koc = Voc_c/(m * Vt)
Dm0 = (koc - 1)/(koc - log(koc))
Dm = Dm0 + 2 * rs * Dm0^2
Impp_c = Isc_c * (1 - Dm/koc)
Vmpp_c = Voc_c * (1 - log(koc/Dm)/koc - rs * (1 - Dm/koc))
Voc = with(module, Voc_c * Ncs * generator$Nms)
Isc = with(module, Isc_c * Ncp * generator$Nmp)
Impp = with(module, Impp_c * Ncp * generator$Nmp)
Vmpp = with(module, Vmpp_c * Ncs * generator$Nms)
?prodGCPV()
?ProdGCPV
?`ProdGCPV-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
fProd
?prodGCPV()
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
###Comparison of different tracker methods
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE
)
prodFixed
as.data.frameY()
as.data.frameY(prodFixed)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
a
a <- data.frame(         Ano = c( 2014, 2015)   Eac = c(112.3036, 38897.8181),        Edc = c(124.2931, 43190.2804)         Yf = c(4.244417,1470.109158)
a <- data.frame(         Ano = c( 2014, 2015),   Eac = c(112.3036, 38897.8181),        Edc = c(124.2931, 43190.2804)         Yf = c(4.244417,1470.109158)
a <- data.frame(         Ano = c( 2014, 2015),   Eac = c(112.3036, 38897.8181),        Edc = c(124.2931, 43190.2804),         Yf = c(4.244417,1470.109158)
)
a
colSums(a)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
colSums(a)
a
as.data.frameY(prodFixed)
names(prodFixed)
names(as.data.frameY(prodFixed))
as.data.frameY(prodFixed)[1]
?as.data.frameY
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
lat=37.2;
G0dm=c(2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179, 2766, 3491, 4494, 5912, 6989, 7742, 7919, 7027, 5369, 3562, 2814,
2179)
Ta=c(10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2, 10, 14.1, 15.6, 17.2, 19.3, 21.2, 28.4, 29.9, 24.3, 18.2, 17.2, 15.2)
prom=list(G0dm=G0dm, Ta=Ta)
###Comparison of different tracker methods
prodFixed<-prodGCPV(lat=lat,dataRad=prom, keep.night=FALSE)
prodFixed
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?as.matrix.data.frame()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?colSums
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
DatosSiar
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
View(rad1)
View(rad1)
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?paste0
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?verbatimTextOutput
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?req
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?prodGCPV
?`ProdGCPV-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?calcG0
?G0
??G0
?`as.zooM,G0-method`
?signature
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
??G0
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?xyplot
?`xyplot,formula,G0-method`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?G0 month
??G0 month
??G0-month
??G0
?calcG0()
??G0
?slot
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?verbatimTextOutput()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?round
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?ceiling
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?`ProdGCPV-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
library(shiny)
library(ggmap)
library(solaR)
library(htmltools)
library(rsconnect)
library(plyr)
library(shinyjs)
?calcGef
?`Gef-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?`ProdGCPV-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?round()
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?`Gef-class`
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
?numericInput
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
shiny::runApp('D:/TFG/Fotovoltaica 101/Fotovoltaica_101')
a <- 'roma'
b <- 'amor'
a in b
a %in% b
for( i in range(1:len(a)))
for( i in range(1:len(a)), step = -1)
for( i in range(1:len(a)) step = -1)
for( i in range(len(a):1)
paste(c, i, sep = '')
for( i in range(len(a):1){}
for( i in range(len(a):1){
paste(c, i, sep = '')
}
for( i in range(len(a):1){
paste(c, a[i], sep = '')
}
for( i in range(len(a):1)){
paste(c, a[i], sep = '')
}
for( i in range(length(a):1)){
paste(c, a[i], sep = '')
}
c <- ''
for( i in range(length(a):1)){
paste(c, a[i], sep = '')
}
c
for( i in range(length(a):1)){
c <- paste(c, a[i], sep = '')
}
c
a
for( i in range(length(a):1)){
print(i)
}
length(a)
nchar(a)
for( i in range(nchar(a):1)){
c <- paste(c, a[i], sep = '')
}
c
c <- ''
for( i in range(nchar(a):1)){
c <- paste(c, a[i], sep = '')
}
c
c <- ''
for( i in range(nchar(a):1)){
c <- paste(c, substr(a, i, i), sep = '')
}
c
for( i in range(nchar(a):1)){
c <- paste(c, substr(a, i, i), sep = '')
}
c
nchar(a)
for( i in range(nchar(a):1)){
print (i)
}
1:3
3:1
4:1
for( i in nchar(a):1){
c <- paste(c, substr(a, i, i), sep = '')
}
c
c <- ''
for( i in nchar(a):1){
c <- paste(c, substr(a, i, i), sep = '')
}
c == b
setwd("D:/Mis Documentos/uni/UOC/Minería de datos/Practica")
producto <- read.csv('producto.cvs', encoding = 'UTF-8')
cabeceraProducto <- c('CodProducto', 'Descripcion',
'NombrePais', 'Coste', 'PrecioVenta', 'TipoUnidad',
'NombreSubFamilia', 'Marca', 'CodProveedor')
colnames(producto) <- cabeceraProducto
head(producto)
proveedor <- read.csv('proveedor.cvs', encoding = 'UTF-8')
cabeceraProveedor <- c('CodProveedor', 'NombreProveedor', 'PersonaContacto',
'Direccion', 'Telefono', 'PeriodoPago',
'PagoPendiente', 'TipoProveedor', 'Alcance')
colnames(proveedor) <- cabeceraProveedor
head(proveedor)
proveedor[proveedor$CodProveedor == 101, ]
proveedor <- read.csv('proveedor.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraProveedor <- c('CodProveedor', 'NombreProveedor', 'PersonaContacto',
'Direccion', 'Telefono', 'PeriodoPago',
'PagoPendiente', 'TipoProveedor', 'Alcance')
colnames(proveedor) <- cabeceraProveedor
head(proveedor)
subfamilia <- read.csv('subfamilia.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraSubfamilia <- c('NombreSubFamilia', 'Descripcion', 'Nombrefamilia')
colnames(subfamilia) <- cabeceraSubfamilia
head(subfamilia)
View(subfamilia)
View(subfamilia)
familia <- read.csv('familia.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraFamilia <- c('NombreSubFamilia', 'Descripcion', 'Nombrefamilia')
colnames(familia) <- cabeceraFamilia
head(familia)
familia <- read.csv('familia.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraFamilia <- c('NombreFamilia', 'Descripción', 'NombreSeccion')
colnames(familia) <- cabeceraFamilia
head(familia)
cabecera <- read.csv('cabecera.cvs', encoding = 'UTF-8', header = FALSE)
cabecera <- read.csv('cabeceraticket.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraCTicket <- c('CodVenta', 'NombreTienda', 'Fecha', 'Hora',
'FormaPago', 'CodCliente', 'ImporteTotal',
'TotalUnidades', 'PuntosTicket')
colnames(cabecera) <- cabeceraCTicket
head(cabecera)
#Lineas Ticket
lineas <- read.csv('lineasticket.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraLineas <- c('CodLinea', 'CodVenta', 'NombreTienda', 'CodProducto',
'Cantidad', 'PrecioVenta', 'NombrePromocion', 'CodCabecera')
colnames(lineas) <- cabeceraLineas
head(lineas)
#Promocion
promocion <- read.csv('promocion.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraPromocion <- c('NombrePromocion', 'TipoPromocion', 'Coste', 'FechaInicio',
'FechaFin', 'CodProducto', 'NombreFamilia', 'NombreSeccion',
'NombreTienda', 'NombreRegion', 'NombrePais')
colnames(promocion) <- cabeceraPromocion
head(promocion)
#Pedido
pedido <- read.csv('pedido.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraPedido <- c('CodPedido', 'NombreTienda', 'CodProducto', 'PrecioCompra',
'CantidadSolicitada', 'FechaSolicitud', 'CantidadEntregada',
'FechaEntrega')
colnames(pedido) <- cabeceraPedido
head(pedido)
View(producto)
View(producto)
View(pedido)
View(pedido)
pedido[pedido$CodPedido==82207]
pedido[pedido$CodPedido==82207, ]
lenght(unique(pedido$CodPedido))
length(unique(pedido$CodPedido))
#En este script vamos a hacer la modificación de datos original, añadiendo las cabeceras
setwd("D:/Mis Documentos/uni/UOC/Minería de datos/Practica")
tienda <- read.csv('tienda.cvs', encoding = 'UTF-8', header = FALSE)
View(tienda)
cabeceraTienda <- c('Nombre', 'Direccion', 'Superficie', 'Formato_Tienda', 'Pais', 'Tipo_Zona')
colnames(tienda) <- cabeceraTienda
head(tienda)
#Pais
pais <- read.csv('pais.cvs', encoding = 'UTF-8', header = FALSE)
View(pais)
cabeceraPais <- c('NombrePais', 'Extension', 'Poblacion', 'NombreRegion')
colnames(pais) <- cabeceraPais
head(pais)
#Región
region <- read.csv('regiongeografica.cvs', encoding = 'UTF-8', header = FALSE)
View(region)
cabeceraRegion <- c('NombreRegion', 'Continente')
colnames(region) <- cabeceraRegion
head(region)
#Cliente
cliente <- read.csv('cliente.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraCliente <- c('CodCliente', 'NombreCliente', 'Sexo', 'FechaNaciemiento',
'EstadoCivil', 'Direccion', 'Profesion', 'NumeroHijos',
'Region', 'Nacionalidad', 'TotalCompras', 'PuntosAcumulados')
colnames(cliente) <- cabeceraCliente
head(cliente)
#Producto
producto <- read.csv('producto.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraProducto <- c('CodProducto', 'Descripcion',
'NombrePais', 'Coste', 'PrecioVenta', 'TipoUnidad',
'NombreSubFamilia', 'Marca', 'CodProveedor')
colnames(producto) <- cabeceraProducto
head(producto)
#Proveedor
proveedor <- read.csv('proveedor.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraProveedor <- c('CodProveedor', 'NombreProveedor', 'PersonaContacto',
'Direccion', 'Telefono', 'PeriodoPago',
'PagoPendiente', 'TipoProveedor', 'Alcance')
colnames(proveedor) <- cabeceraProveedor
head(proveedor)
#Subfamilia
subfamilia <- read.csv('subfamilia.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraSubfamilia <- c('NombreSubFamilia', 'Descripcion', 'Nombrefamilia')
colnames(subfamilia) <- cabeceraSubfamilia
head(subfamilia)
#Familia
familia <- read.csv('familia.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraFamilia <- c('NombreFamilia', 'Descripción', 'NombreSeccion')
colnames(familia) <- cabeceraFamilia
head(familia)
#Seccion
seccion <- read.csv('seccion.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraSeccion <- c('NombreSeccion', 'Descripcion')
colnames(seccion) <- cabeceraSeccion
head(seccion)
#CabeceraTicket
cabecera <- read.csv('cabeceraticket.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraCTicket <- c('CodVenta', 'NombreTienda', 'Fecha', 'Hora',
'FormaPago', 'CodCliente', 'ImporteTotal',
'TotalUnidades', 'PuntosTicket')
colnames(cabecera) <- cabeceraCTicket
head(cabecera)
#Lineas Ticket
lineas <- read.csv('lineasticket.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraLineas <- c('CodLinea', 'CodVenta', 'NombreTienda', 'CodProducto',
'Cantidad', 'PrecioVenta', 'NombrePromocion', 'CodCabecera')
colnames(lineas) <- cabeceraLineas
head(lineas)
#Promocion
promocion <- read.csv('promocion.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraPromocion <- c('NombrePromocion', 'TipoPromocion', 'Coste', 'FechaInicio',
'FechaFin', 'CodProducto', 'NombreFamilia', 'NombreSeccion',
'NombreTienda', 'NombreRegion', 'NombrePais')
colnames(promocion) <- cabeceraPromocion
head(promocion)
#Pedido
pedido <- read.csv('pedido.cvs', encoding = 'UTF-8', header = FALSE)
cabeceraPedido <- c('CodPedido', 'NombreTienda', 'CodProducto', 'PrecioCompra',
'CantidadSolicitada', 'FechaSolicitud', 'CantidadEntregada',
'FechaEntrega')
colnames(pedido) <- cabeceraPedido
head(pedido)
View(proveedor)
View(proveedor)
View(subfamilia)
View(subfamilia)
View(subfamilia)
View(familia)
View(familia)
View(lineas)
View(lineas)
View(producto)
View(producto)
producto$CodProducto[producto$CodProducto==producto$CodProducto]
producto[producto$CodProducto==158TR]
producto[producto$CodProducto=='158TR']
producto[producto$CodProducto=='158TR',]
View(cabecera)
View(cabecera)
View(promocion)
View(promocion)
View(producto)
producto[producto$CodProducto=='137TR',]
producto[producto$CodProducto=='219SY',]
View(proveedor)
pedido[pedido$CantidadSolicitada > pedido$CantidadEntregada, ]
unique(pedido[pedido$CantidadSolicitada > pedido$CantidadEntregada, ]$CodProducto)
producto[producto$CodProducto==unique(pedido[pedido$CantidadSolicitada > pedido$CantidadEntregada, ]$CodProducto),]
unique(pedido[pedido$CantidadSolicitada > pedido$CantidadEntregada, ]$CodProducto)
lostProd <- unique(pedido[pedido$CantidadSolicitada > pedido$CantidadEntregada, ]$CodProducto)
lostProd
as.vector(lostProd)
lostProd <- as.vector(lostProd)
producto[producto$CodProducto==lostProd,]
producto[producto$CodProducto==lostProd[1],]
producto$CodProducto %in% lostProd
producto[producto$CodProducto %in% lostProd, ]
